<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean class="com.wuqinghua.taotao.common.utils.SpringContentHolder"></bean>

    <bean class="com.wuqinghua.taotao.common.utils.JedisUtils"></bean>


    <!--连接池配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--最大连接数-->
        <property name="maxTotal" value="${redis.maxTotal}"></property>
        <!--最大空闲连接数-->
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <!--每次释放连接的最大数目-->
        <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}"></property>
        <!--释放连接的扫描间隔（毫秒）-->
        <property name="timeBetweenEvictionRunsMillis"
                  value="${redis.timeBetweenEvictionRunsMillis}"></property>
        <!--最小空闲时间-->
        <property name="minEvictableIdleTimeMillis"
                  value="${redis.minEvictableIdleTimeMillis}"></property>
        <!--连接空闲多久后释放，当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放-->
        <property name="softMinEvictableIdleTimeMillis"
                  value="${redis.softMinEvictableIdleTimeMillis}"></property>
        <!--获取连接时的最大等待毫秒数，默认－1-->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"></property>
        <!--在获取连接的时候检测有效性-->
        <property name="testOnBorrow" value="${redis.testOnBorrow}"></property>
        <!--在空闲时检测有效行-->
        <property name="testWhileIdle" value="${redis.testWhileIdle}"></property>
        <!--连接耗尽时是否阻塞，false抱异常，true阻塞直到超时，默认ture-->
        <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}"></property>
    </bean>


    <!--jedis单机版-->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <constructor-arg name="host" value="${redis.host}"/>
        <constructor-arg name="port" value="${redis.port}"/>
    </bean>

    <!--jedis集群-->
    <bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">
        <constructor-arg name="nodes">
            <set>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="127.0.0.1"/>
                    <constructor-arg name="port" value="7001"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="127.0.0.1"/>
                    <constructor-arg name="port" value="7002"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="127.0.0.1"/>
                    <constructor-arg name="port" value="7003"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="127.0.0.1"/>
                    <constructor-arg name="port" value="7004"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="127.0.0.1"/>
                    <constructor-arg name="port" value="7005"/>
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="127.0.0.1"/>
                    <constructor-arg name="port" value="7006"/>
                </bean>
            </set>
        </constructor-arg>

    </bean>

</beans>